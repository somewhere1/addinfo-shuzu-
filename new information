数组的属  ：  length
System.out.println(name.length);

求[a,b]区间上10个随机最大值:
   class Main{
      public static void main(String[] args){
          int[] arr = new int[10];
            for(int i=0;i<arr.length;i++){
               arr[i] = (int)(Math.random()*(a-b+1)+a);
               
            }
            int maxvalue=0;
            for(int j=0;j<arr.lrngth;j++){
                if(maxvalue<arr[j]){
                      maxvalue=arr[j];
                }
            }
              System.out.println(maxvalue);
          }
      
   }
数组的复制
  class Main{
    pubic static void main(String[] args){
       int array1,array2;
       array1 = new int[]{2,3,4,5,6,7,7};
       for(int i=0;i<array1.length;i++){
           System.out.println(array1[i]);
       }
        array2 = array1;
           for(int i=0;i<array2.length;i++){
               if(i%2==0){
                  array2[i]=i;
               }
           }
           for(int i=0;i<array1.length;i++){
           System.out.println();
           }
    }
  }
  
  
  查找（线性查找 二分法查找）
  String dest="B";
    for(int i=0;i<arr.length;i++){
      if(dest.equals(arr[i])){
         System.out.println("找到了")；
           break;
      }
        System.out.println("很稀罕未找到");
    }
    
    数组元素的反转
       for（int i=0;i<arr.length/2;i++）{
           String temp = arr[i];
             arr[i] = arr[arr.length-i-1];
              arr[arr.length-i-1] =temp;
       }
       
       for(int i=0,j=arr.length-1;i<j;i++,j--){
          String temp = arr[i];
            arr[i] = arr[j];
            arr[j] =temp;
       }
